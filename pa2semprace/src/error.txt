==13953== Memcheck, a memory error detector
==13953== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13953== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13953== Command: ./a.out
==13953== 
==13953== Invalid read of size 4
==13953==    at 0x1269C1: CTank::CTank(int, int, AttackerConf&) (CTank.cpp:8)
==13953==    by 0x12BB44: std::_MakeUniq<CTank>::__single_object std::make_unique<CTank, int&, int&, AttackerConf&>(int&, int&, AttackerConf&) (in /home/kuba/filipj25/pa2semprace/src/a.out)
==13953==    by 0x12B368: CGame::loadSave(int) (in /home/kuba/filipj25/pa2semprace/src/a.out)
==13953==    by 0x11074E: CGame::CGame(int, int, int) (CGame.cpp:7)
==13953==    by 0x10CDC8: main (main.cpp:12)
==13953==  Address 0x4e41274 is 0 bytes after a block of size 20 alloc'd
==13953==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==13953==    by 0x12980B: __gnu_cxx::new_allocator<AttackerConf>::allocate(unsigned long, void const*) (in /home/kuba/filipj25/pa2semprace/src/a.out)
==13953==    by 0x1293FF: std::allocator_traits<std::allocator<AttackerConf> >::allocate(std::allocator<AttackerConf>&, unsigned long) (in /home/kuba/filipj25/pa2semprace/src/a.out)
==13953==    by 0x128CFD: std::_Vector_base<AttackerConf, std::allocator<AttackerConf> >::_M_allocate(unsigned long) (in /home/kuba/filipj25/pa2semprace/src/a.out)
==13953==    by 0x127E50: void std::vector<AttackerConf, std::allocator<AttackerConf> >::_M_realloc_insert<AttackerConf>(__gnu_cxx::__normal_iterator<AttackerConf*, std::vector<AttackerConf, std::allocator<AttackerConf> > >, AttackerConf&&) (in /home/kuba/filipj25/pa2semprace/src/a.out)
==13953==    by 0x1279BB: void std::vector<AttackerConf, std::allocator<AttackerConf> >::emplace_back<AttackerConf>(AttackerConf&&) (in /home/kuba/filipj25/pa2semprace/src/a.out)
==13953==    by 0x1272D6: CGame::parseFile(int) (in /home/kuba/filipj25/pa2semprace/src/a.out)
==13953==    by 0x12B0C3: CGame::loadSave(int) (in /home/kuba/filipj25/pa2semprace/src/a.out)
==13953==    by 0x11074E: CGame::CGame(int, int, int) (CGame.cpp:7)
==13953==    by 0x10CDC8: main (main.cpp:12)
==13953== 
==13953== Invalid read of size 4
==13953==    at 0x1269CE: CTank::CTank(int, int, AttackerConf&) (CTank.cpp:9)
==13953==    by 0x12BB44: std::_MakeUniq<CTank>::__single_object std::make_unique<CTank, int&, int&, AttackerConf&>(int&, int&, AttackerConf&) (in /home/kuba/filipj25/pa2semprace/src/a.out)
==13953==    by 0x12B368: CGame::loadSave(int) (in /home/kuba/filipj25/pa2semprace/src/a.out)
==13953==    by 0x11074E: CGame::CGame(int, int, int) (CGame.cpp:7)
==13953==    by 0x10CDC8: main (main.cpp:12)
==13953==  Address 0x4e41278 is 4 bytes after a block of size 20 alloc'd
==13953==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==13953==    by 0x12980B: __gnu_cxx::new_allocator<AttackerConf>::allocate(unsigned long, void const*) (in /home/kuba/filipj25/pa2semprace/src/a.out)
==13953==    by 0x1293FF: std::allocator_traits<std::allocator<AttackerConf> >::allocate(std::allocator<AttackerConf>&, unsigned long) (in /home/kuba/filipj25/pa2semprace/src/a.out)
==13953==    by 0x128CFD: std::_Vector_base<AttackerConf, std::allocator<AttackerConf> >::_M_allocate(unsigned long) (in /home/kuba/filipj25/pa2semprace/src/a.out)
==13953==    by 0x127E50: void std::vector<AttackerConf, std::allocator<AttackerConf> >::_M_realloc_insert<AttackerConf>(__gnu_cxx::__normal_iterator<AttackerConf*, std::vector<AttackerConf, std::allocator<AttackerConf> > >, AttackerConf&&) (in /home/kuba/filipj25/pa2semprace/src/a.out)
==13953==    by 0x1279BB: void std::vector<AttackerConf, std::allocator<AttackerConf> >::emplace_back<AttackerConf>(AttackerConf&&) (in /home/kuba/filipj25/pa2semprace/src/a.out)
==13953==    by 0x1272D6: CGame::parseFile(int) (in /home/kuba/filipj25/pa2semprace/src/a.out)
==13953==    by 0x12B0C3: CGame::loadSave(int) (in /home/kuba/filipj25/pa2semprace/src/a.out)
==13953==    by 0x11074E: CGame::CGame(int, int, int) (CGame.cpp:7)
==13953==    by 0x10CDC8: main (main.cpp:12)
==13953== 
==13953== Invalid read of size 4
==13953==    at 0x1269E7: CTank::CTank(int, int, AttackerConf&) (CTank.cpp:11)
==13953==    by 0x12BB44: std::_MakeUniq<CTank>::__single_object std::make_unique<CTank, int&, int&, AttackerConf&>(int&, int&, AttackerConf&) (in /home/kuba/filipj25/pa2semprace/src/a.out)
==13953==    by 0x12B368: CGame::loadSave(int) (in /home/kuba/filipj25/pa2semprace/src/a.out)
==13953==    by 0x11074E: CGame::CGame(int, int, int) (CGame.cpp:7)
==13953==    by 0x10CDC8: main (main.cpp:12)
==13953==  Address 0x4e4127c is 8 bytes after a block of size 20 alloc'd
==13953==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==13953==    by 0x12980B: __gnu_cxx::new_allocator<AttackerConf>::allocate(unsigned long, void const*) (in /home/kuba/filipj25/pa2semprace/src/a.out)
==13953==    by 0x1293FF: std::allocator_traits<std::allocator<AttackerConf> >::allocate(std::allocator<AttackerConf>&, unsigned long) (in /home/kuba/filipj25/pa2semprace/src/a.out)
==13953==    by 0x128CFD: std::_Vector_base<AttackerConf, std::allocator<AttackerConf> >::_M_allocate(unsigned long) (in /home/kuba/filipj25/pa2semprace/src/a.out)
==13953==    by 0x127E50: void std::vector<AttackerConf, std::allocator<AttackerConf> >::_M_realloc_insert<AttackerConf>(__gnu_cxx::__normal_iterator<AttackerConf*, std::vector<AttackerConf, std::allocator<AttackerConf> > >, AttackerConf&&) (in /home/kuba/filipj25/pa2semprace/src/a.out)
==13953==    by 0x1279BB: void std::vector<AttackerConf, std::allocator<AttackerConf> >::emplace_back<AttackerConf>(AttackerConf&&) (in /home/kuba/filipj25/pa2semprace/src/a.out)
==13953==    by 0x1272D6: CGame::parseFile(int) (in /home/kuba/filipj25/pa2semprace/src/a.out)
==13953==    by 0x12B0C3: CGame::loadSave(int) (in /home/kuba/filipj25/pa2semprace/src/a.out)
==13953==    by 0x11074E: CGame::CGame(int, int, int) (CGame.cpp:7)
==13953==    by 0x10CDC8: main (main.cpp:12)
==13953== 
==13953== Invalid read of size 4
==13953==    at 0x126A0E: CTank::CTank(int, int, AttackerConf&) (CTank.cpp:13)
==13953==    by 0x12BB44: std::_MakeUniq<CTank>::__single_object std::make_unique<CTank, int&, int&, AttackerConf&>(int&, int&, AttackerConf&) (in /home/kuba/filipj25/pa2semprace/src/a.out)
==13953==    by 0x12B368: CGame::loadSave(int) (in /home/kuba/filipj25/pa2semprace/src/a.out)
==13953==    by 0x11074E: CGame::CGame(int, int, int) (CGame.cpp:7)
==13953==    by 0x10CDC8: main (main.cpp:12)
==13953==  Address 0x4e41280 is 12 bytes after a block of size 20 alloc'd
==13953==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==13953==    by 0x12980B: __gnu_cxx::new_allocator<AttackerConf>::allocate(unsigned long, void const*) (in /home/kuba/filipj25/pa2semprace/src/a.out)
==13953==    by 0x1293FF: std::allocator_traits<std::allocator<AttackerConf> >::allocate(std::allocator<AttackerConf>&, unsigned long) (in /home/kuba/filipj25/pa2semprace/src/a.out)
==13953==    by 0x128CFD: std::_Vector_base<AttackerConf, std::allocator<AttackerConf> >::_M_allocate(unsigned long) (in /home/kuba/filipj25/pa2semprace/src/a.out)
==13953==    by 0x127E50: void std::vector<AttackerConf, std::allocator<AttackerConf> >::_M_realloc_insert<AttackerConf>(__gnu_cxx::__normal_iterator<AttackerConf*, std::vector<AttackerConf, std::allocator<AttackerConf> > >, AttackerConf&&) (in /home/kuba/filipj25/pa2semprace/src/a.out)
==13953==    by 0x1279BB: void std::vector<AttackerConf, std::allocator<AttackerConf> >::emplace_back<AttackerConf>(AttackerConf&&) (in /home/kuba/filipj25/pa2semprace/src/a.out)
==13953==    by 0x1272D6: CGame::parseFile(int) (in /home/kuba/filipj25/pa2semprace/src/a.out)
==13953==    by 0x12B0C3: CGame::loadSave(int) (in /home/kuba/filipj25/pa2semprace/src/a.out)
==13953==    by 0x11074E: CGame::CGame(int, int, int) (CGame.cpp:7)
==13953==    by 0x10CDC8: main (main.cpp:12)
==13953== 
==13953== Invalid read of size 4
==13953==    at 0x126A1C: CTank::CTank(int, int, AttackerConf&) (CTank.cpp:14)
==13953==    by 0x12BB44: std::_MakeUniq<CTank>::__single_object std::make_unique<CTank, int&, int&, AttackerConf&>(int&, int&, AttackerConf&) (in /home/kuba/filipj25/pa2semprace/src/a.out)
==13953==    by 0x12B368: CGame::loadSave(int) (in /home/kuba/filipj25/pa2semprace/src/a.out)
==13953==    by 0x11074E: CGame::CGame(int, int, int) (CGame.cpp:7)
==13953==    by 0x10CDC8: main (main.cpp:12)
==13953==  Address 0x4e41284 is 16 bytes after a block of size 20 alloc'd
==13953==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==13953==    by 0x12980B: __gnu_cxx::new_allocator<AttackerConf>::allocate(unsigned long, void const*) (in /home/kuba/filipj25/pa2semprace/src/a.out)
==13953==    by 0x1293FF: std::allocator_traits<std::allocator<AttackerConf> >::allocate(std::allocator<AttackerConf>&, unsigned long) (in /home/kuba/filipj25/pa2semprace/src/a.out)
==13953==    by 0x128CFD: std::_Vector_base<AttackerConf, std::allocator<AttackerConf> >::_M_allocate(unsigned long) (in /home/kuba/filipj25/pa2semprace/src/a.out)
==13953==    by 0x127E50: void std::vector<AttackerConf, std::allocator<AttackerConf> >::_M_realloc_insert<AttackerConf>(__gnu_cxx::__normal_iterator<AttackerConf*, std::vector<AttackerConf, std::allocator<AttackerConf> > >, AttackerConf&&) (in /home/kuba/filipj25/pa2semprace/src/a.out)
==13953==    by 0x1279BB: void std::vector<AttackerConf, std::allocator<AttackerConf> >::emplace_back<AttackerConf>(AttackerConf&&) (in /home/kuba/filipj25/pa2semprace/src/a.out)
==13953==    by 0x1272D6: CGame::parseFile(int) (in /home/kuba/filipj25/pa2semprace/src/a.out)
==13953==    by 0x12B0C3: CGame::loadSave(int) (in /home/kuba/filipj25/pa2semprace/src/a.out)
==13953==    by 0x11074E: CGame::CGame(int, int, int) (CGame.cpp:7)
==13953==    by 0x10CDC8: main (main.cpp:12)
==13953== 
==13953== 
==13953== Process terminating with default action of signal 8 (SIGFPE)
==13953==  Integer divide by zero at address 0x1003151BD2
==13953==    at 0x126A53: CTank::draw(_win_st*) (CTank.cpp:23)
==13953==    by 0x122328: CMap::redraw(_win_st*) (CMapRedraw.cpp:38)
==13953==    by 0x110E02: CGame::CGame(int, int, int) (CGame.cpp:72)
==13953==    by 0x10CDC8: main (main.cpp:12)
==13953== 
==13953== HEAP SUMMARY:
==13953==     in use at exit: 240,962 bytes in 2,156 blocks
==13953==   total heap usage: 31,265 allocs, 29,109 frees, 2,098,401 bytes allocated
==13953== 
==13953== LEAK SUMMARY:
==13953==    definitely lost: 0 bytes in 0 blocks
==13953==    indirectly lost: 0 bytes in 0 blocks
==13953==      possibly lost: 0 bytes in 0 blocks
==13953==    still reachable: 240,962 bytes in 2,156 blocks
==13953==         suppressed: 0 bytes in 0 blocks
==13953== Rerun with --leak-check=full to see details of leaked memory
==13953== 
==13953== For lists of detected and suppressed errors, rerun with: -s
==13953== ERROR SUMMARY: 95 errors from 5 contexts (suppressed: 0 from 0)
